#!/bin/sh
##########################################################################################
##### Utility :: vulnerability_scan.sh #####
##### Description :: this utility is used to scan image vulnerabilities from Quay #####
##########################################################################################
echo ""
echo -e "###########################################################################"
echo -e "=##=> Waiting to finish vulnerabilities scan , Setting ENV Variables ${QUAY_URL} ${QUAY_REPO_NAME} ${tag} ##"
echo -e "###########################################################################"
echo ""
echo -e "==> Get Image ID from Quay Enterprise for vulnerabilities scan ,Please wait..."
echo ""
sleep 90
curl -k -H "Authorization: Bearer ${QUAY_API_TOKEN}" ${QUAY_URL}/api/v1/repository/{QUAY_REPO_NAME} | jq -r '.tags[] | select(.name == "$tag").manifest_digest' > /app/image_id.txt
MANIFEST=$(cat /app/image_id.txt)
echo -e "###########################################################################"
echo -e "##==> Scanning each layer for Critical Vulnerabilities, Please wait... ##"
echo -e "###########################################################################"
sleep 2
  echo ""
  echo ""
  echo -e "==> Scanning $MANIFEST Layer, Please wait..."
  echo ""
  curl -k -H "Authorization: Bearer ${QUAY_API_TOKEN}" ${QUAY_URL}/api/v1/repository/${QUAY_REPO_NAME}/manifest/${MANIFEST}/security?vulnerabilities=true | jq -r
'.data.Layer.Features[].Vulnerabilities[] | .Name + " " + .NamespaceName + " " + .Severity' > /app/vulnerability_output.txt
  CRITICAL=$(cat /app/vulnerability_output.txt | grep Critical | wc -l)
  if [ $CRITICAL -ne 0 ]; then
  echo ""
  echo -e "==> There are $CRITICAL Critical Vulnerabilities found in this Layer, Exiting from Pipeline..."
  else
  echo ""
  echo -e "==> No Critical Vulnerabilities found in this Layer"
  echo ""
  fi
echo ""
echo -e "###########################################################################"
echo -e "##==> Scanning each layer for High Vulnerabilities, Please wait... ##"
echo -e "###########################################################################"
sleep 2
echo ""
  echo ""
  echo -e "==> Scanning $MANIFEST Layer, Please wait..."
  echo ""
  curl -k -H "Authorization: Bearer ${QUAY_API_TOKEN}" ${QUAY_URL}/api/v1/repository/${QUAY_REPO_NAME}/manifest/${MANIFEST}/security?vulnerabilities=true | jq -r
'.data.Layer.Features[].Vulnerabilities[] | .Name + " " + .NamespaceName + " " + .Severity' > /app/vulnerability_output.txt
  HIGH=$(cat /app/vulnerability_output.txt | grep -i High | wc -l)
  if [ $HIGH -ne 0 ]; then
  echo ""
  echo -e "==> There are $HIGH High Vulnerabilities found in this Layer, Exiting from Pipeline..."
  else
  echo ""
  echo -e "==> No High Vulnerabilities found in this Layer"
  echo ""
  fi
echo ""
echo -e "###########################################################################"
echo -e "##==> Scanning each layer for Medium Vulnerabilities, Please wait... ##"
echo -e "###########################################################################"
sleep 2
echo ""
  echo ""
  echo -e "==> Scanning $MANIFEST Layer, Please wait..."
  echo ""
  curl -k -H "Authorization: Bearer ${QUAY_API_TOKEN}" ${QUAY_URL}/api/v1/repository/${QUAY_REPO_NAME}/manifest/${MANIFEST}/security?vulnerabilities=true | jq -r
'.data.Layer.Features[].Vulnerabilities[] | .Name + " " + .NamespaceName + " " + .Severity' > /app/vulnerability_output.txt
  MEDIUM=$(cat /app/vulnerability_output.txt | grep Medium | wc -l)
  if [ $MEDIUM -ne 0 ]; then
  echo ""
  echo -e "==> There are $MEDIUM Medium Vulnerabilities found in this Layer, Exiting from Pipeline..."
  else
  echo ""
  echo -e "==> No Medium Vulnerabilities found in this Layer"
  echo ""
  fi
echo ""
echo -e "###########################################################################"
echo -e "##==> Scanning each layer for Low Vulnerabilities, Please wait... ##"
echo -e "###########################################################################"
sleep 2
echo ""
for A in $(cat ${IMAGE_ID_OUTPUT_FILE})
do
  echo ""
  echo -e "==> Scanning $A Layer, Please wait..."
  echo ""
  curl -k -H "Authorization: Bearer ${QUAY_API_TOKEN}" ${QUAY_URL}/api/v1/repository/${QUAY_REPO_NAME}/manifest/${MANIFEST}/security?vulnerabilities=true | jq -r
'.data.Layer.Features[].Vulnerabilities[] | .Name + " " + .NamespaceName + " " + .Severity' > /app/vulnerability_output.txt
  LOW=$(cat /app/vulnerability_output.txt | grep Low | wc -l)
  if [ $LOW -ne 0 ]; then
  echo ""
  echo -e "==> There are $LOW Low Vulnerabilities found in this Layer, Exiting from Pipeline..."
  else
  echo ""
  echo -e "==> No Low Vulnerabilities found in this Layer"
  echo ""
  fi
done
echo ""
echo -e "###########################################################################"
echo -e "##==> Scanning each layer for Unknown Vulnerabilities, Please wait... ##"
echo -e "###########################################################################"
sleep 2
echo ""
for A in $(cat ${IMAGE_ID_OUTPUT_FILE})
do
  echo ""
  echo -e "==> Scanning $A Layer, Please wait..."
  echo ""
  curl -k -H "Authorization: Bearer ${QUAY_API_TOKEN}" ${QUAY_URL}/api/v1/repository/${QUAY_REPO_NAME}/manifest/${MANIFEST}/security?vulnerabilities=true | jq -r
'.data.Layer.Features[].Vulnerabilities[] | .Name + " " + .NamespaceName + " " + .Severity' > /app/vulnerability_output.txt
  UNKNOWN=$(cat /app/vulnerability_output.txt | grep Unknown | wc -l)
  if [ $UNKNOWN -ne 0 ]; then
  echo ""
  echo -e "==> There are $UNKNOWN Unknown Vulnerabilities found in this Layer, Exiting from Pipeline..."
  else
  echo ""
  echo -e "==> No Unknown Vulnerabilities found in this Layer"
  echo ""
  fi
done
